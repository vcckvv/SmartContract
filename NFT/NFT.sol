// SPDX-License-Identifier: MIT
pragma solidity ^0.8.14;

import "@openzeppelin/contracts/token/ERC721/ERC721.sol";
import "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

contract NFT is ERC721, ERC721Enumerable, Ownable {
    
	string[] uriArr;
 
	constructor() ERC721("NFT Token", "NFT") {
		
	}
	
	//example1: ipfs://QmUtb97bLLNPYTYPzCPxuLhu3q4kRcMzhtrW7W5xJVgr9B
	//example2: https://ipfs.io/ipfs/QmUtb97bLLNPYTYPzCPxuLhu3q4kRcMzhtrW7W5xJVgr9B
	//example3: data:application/json;base64,eyJuYW1lIjoicmFCaXQiLCJkZXNjcmlwdGlvbiI6InJhQml0IiwiaW1hZ2UiOiJodHRwczovL2lwZnMuaW8vaXBmcy9RbVJUaFBQQjFQRXNTNnRTS2RRWDRwMlVEbThNMUVWeERIckJ2dVR4OWRudkZlIn0=
	//example4: data:application/json;base64,eyJuYW1lIjoiaWNvbiIsImRlc2NyaXB0aW9uIjoiaWNvbiIsImltYWdlIjoiZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFDZ0FBQUFvQ0FJQUFBQURuQzg2QUFBR3IwbEVRVlJZaGNXWWYzQlVWeFhIditmZTkvWlhOcHNmbXcwa0lWZ0lBWnFHMGdKU3RZMVd3SlpXclMyMmRPSkluYWwyT25XMFA5VFJEdTNvWUlkT2h4bFI2NHdqVXNmUkdhYlNPaTIyV29RSkZFUVVXeUFwTmlHUU5CUENralUvTm1HelNmYkhlKzhlLzNoaDgzYXorUUg5Zy9QUDIzZnZ1ZWR6enA1ejd6dnZFVFBqZW9pNEx0VHJDZGF1YVJXREdheGdwMGxJMEZVSGNCVmd4YXFqczdXOWFWZFo5TlQ4WkhjNTl3TVlKZitnWHRrYlhIdkQzZCt2WFZJdjV1d0J6VjVjek1sMDhyVTlQM3ZnbzUvTWF1N05tbTJidi81RGo4djFjY0VxRlQremZYT05kWEJXUXdBQkU2WU9OYng2MzkwUHpoejlUR0JsR2RGSFM3MWw0K3dCQUFnNWtkcXBWZ29yWk1WS2prZXN2bFlvRThDN25pOTg2ZmwzWm1CUEM0NE45TWtuS25uWnhLMG9XYVRWZnhWbXlqaXpsOGY2Si9XRTFHOSsySDN2VHZJVWNleGlZdS9YclBCSmU2YVhLaXFlYlF2NEExY0JWcXppajN0RXlKcFFjZ2U4alh2bGtnMGdvUWJheDNjMWNHTElucElMUCtWNzdDakVSSkVhcDM2ZmZPTmJHVHNSV1ZxN3JZL3l4WjFuU0xHS1BGV2VvUUlRd1NWeThaMzJuaEdoNWQ3R1AwSG90a3V1enp5Wm9RTFFGbjNXdWJVcXJLRWpQMi9nZk5uSkEyN1pmbCtnY05nNVF1N0NLeVFBa0RYclpQVmFBQ0JRMGNKc2V4cEF6b0UxMFJNbjJvN05EazZjYTZwTjdNOFE3WXVLUjJDbG5KN0lHKzRBQUdhcnM4bTUzTHJ3VHlBcnZyQUkvUEx0bDAyVkczUXV1T2NQendBZ3Fjc0ZuOVJ2YVpUelY1RFFPQlkyengrWVZGSVd4OEwyei9SN3U1Q09YOEdtVTBkZUFqTkpYWlF0bFZXcnlWdnNnN2s3dnE5ajk4WWNVTmJKWmZaOVdFbHRKRFI5N2VQdURUK0YyODlqMGRSYjN6YmI5cVgrL2lQeUZNbnF0V0JsdHYvVjZyaXlzeE5ENXZtRDJ2SXZBa2ovWTRjYU9Fc2t0QldiWFhkdUpjMWpudDhmUExDVlUxalFjOGpxYjVYbE4rVUhYenA5dUJTZzRtclhIYy9BVXdTQS9PV3VEZHZNemlZVjdVaTgrcEFJM1FoV3FyK05rN0VyVVJyR3lkMHdFeW9lU1ovNE5aZ3BVT20rNjBVcVdnQkFYL09vMlhIUVBQc1dnS0dlMDZIcHdBUEg5cFVTU0MrQTVzME1raThJNlFMQTQwTld6NytRdmYyWWxkVjFSRVUrWUNQQnFUZ0FFYXloUU1YRXRIUnJpejl2dGIvTnpCOTFIQSt0MlpKWm1KWGpvdEV1QU9yeUJhdXpDV3dCQUZ0VzV5Rms0bU1HaUtTTFBFVVVxSkxsTjRyaWhTQlNvLzAyMVhiVldkaHNqRTE0T25EV3ljcUt1RVFNQU9CVVBQbTNwL1ZJczF6ME9SWDVJUDN2WDdFeUFaQ1FWRmloMWQydjNiUkpGSDhDbWdkczhmaWdlZTRkNDczZmNpeHM3MWRPRENFVnR6TUZNMkcydm1uL1NjR3hpMDdXNU1tVmZuZDdxdW5IV1hNazJINzBBdVR5dTlZOXI2LzZCdm1DSU9sVUF5dE9ERnRkaDQzVGY3UzZqN0dRN28wNzlHWDNBR1Q4NXpmcG95OU4rSzE1ZkUrMmlHRHRsSWhGN3RiS25EaWtlejFmZmxtN2RVditCejRKOGdXMStvZTB1Z2RVNzZteEE4OFpoMSt3V3QvZ1pFeEZXbXlxSFFjNVVwQjFWa2VmOXJrS1VybG1TV2dyR3oyYlhyRkxiQlpoeTdwd1BQbmFJendTWnNCWmlmOHJYRno3Yk1ka21NNVZRNm84VHp5RjgxMjNQelVuS2dBU3BIbWdlNWc1cC82SC9OWE8yeXh3ekw5NHFpbFJYaWRLOG96bkY2VlVQTUlqa1N4bkFBQmN0c3c1bUFVT05kdy8xUlQ1Z3BCemJzMEk1QzBCT1hJSkVKaUFwWFVicGdWWHJWcVg1VDFMQUd3a2tDbVFPYkZGcGdadEtnQUlXVks3Zmxxd05xKytsK3N5dDVZTmprYzRQWjYzNDhranJOVGdlUmdKY2xLQmtSVmJ5RnM4TFJoQTlZTmJIYjREQU1kNjFIQTNsSkhwNVdiaUppNmIvLzB6VzJrNHFPVHlWV3g4SVVjekYreGIxZGp2dnkwTFBCWTFXL1p3Y2dTV09XUGNqUFNZY2ZJVnEvdW9NMVlRNmZmc3BFQmxqbmFlbmt1eDZubWlLaGpzVDhIalJoSUF1ZjJ1MjcrbnIzcUVDa0tRYnNqc05vTVZ6SVM2Zk5GNGY3ZHg4bmRJalRoYkVMbXkwYk41ejFRM3AyMzJtaDlic1hSZSs2U2U3aFdWdDJvMTYyWDFiU0pZQzNjaHJEU1A5SnFYTDJMd25IWHBmWFhwTkkvMlFSbFpqVTlnUWNFUE92T2VBZE8ydC9HMGNXajd2ZXZOdzFuYUpLQjd5RCtQQ2l1UUdsWERYV3draVpWOXVOcmJadEo3NlM3NGJyTUlMYzlyZjhhR1BoMC92blA5emZFV0FXczZuVWxEenJ3Q1VYZFoxVGYzeTZyVjArblA5SlloOUlKUFA3d2pGYXcxU2ViMGpqTkw3K3J2VkQ4WG5vR0syVi9hbU5Wd2QvckQxM3ViWHpjR3UwbzQ2ZWEwUVA3YUptQWdkRXZWVjM3aFd0UXdxM056ZUZzRXdJcFRJeXJhT1J4dWpwejVTL0RTQ1o4WlZ5d01na1lrQ0FKTUJTRlgvU2IzWFMrUzdwdmQ0RnpCVHJIU0toWldBMmQ1ZkJoRXBIdkpIWUN2VlBqblVVRm9yZyt4YXdGUGlyM3dLbkx2bEd2N0ZJR1BnN1RsdW4xOCtUK09KL05xbC9VbWlRQUFBQUJKUlU1RXJrSmdnZz09In0=
	
	function mint(string memory uri) public {
		require(bytes(uri).length > 0);

		_safeMint(msg.sender, uriArr.length);
		uriArr.push(uri);
	}

	function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {
		require(tokenId < uriArr.length);

		return uriArr[tokenId];
	}

	function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal override(ERC721, ERC721Enumerable) {
		super._beforeTokenTransfer(from, to, tokenId);
	}

	function supportsInterface(bytes4 interfaceId) public view override(ERC721, ERC721Enumerable) returns (bool) {
		return super.supportsInterface(interfaceId);
	}
}
